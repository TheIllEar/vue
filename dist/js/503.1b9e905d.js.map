{"version":3,"file":"js/503.1b9e905d.js","mappings":"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","sources":["webpack://vue-features/./node_modules/core-js/internals/regexp-flags.js","webpack://vue-features/./node_modules/core-js/modules/es.regexp.flags.js","webpack://vue-features/./src/pages/Socket.vue","webpack://vue-features/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://vue-features/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://vue-features/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://vue-features/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://vue-features/./node_modules/engine.io-parser/build/esm/commons.js","webpack://vue-features/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://vue-features/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://vue-features/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://vue-features/./node_modules/engine.io-parser/build/esm/index.js","webpack://vue-features/./node_modules/@socket.io/component-emitter/index.mjs","webpack://vue-features/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/util.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transport.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/socket.js","webpack://vue-features/./node_modules/engine.io-client/build/esm/index.js","webpack://vue-features/./node_modules/socket.io-client/build/esm/url.js","webpack://vue-features/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://vue-features/./node_modules/socket.io-parser/build/esm/binary.js","webpack://vue-features/./node_modules/socket.io-parser/build/esm/index.js","webpack://vue-features/./node_modules/socket.io-client/build/esm/on.js","webpack://vue-features/./node_modules/socket.io-client/build/esm/socket.js","webpack://vue-features/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://vue-features/./node_modules/socket.io-client/build/esm/manager.js","webpack://vue-features/./node_modules/socket.io-client/build/esm/index.js","webpack://vue-features/./src/js/custom/socket.client.js","webpack://vue-features/./src/js/composables/useSocket.js","webpack://vue-features/./src/pages/Socket.vue?08fa"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","<template>\n  <div class=\"container\">\n    <div class=\"card\">\n      <h2>Работа с сокетами - обмен сообщениями</h2>\n      <form\n        class=\"box-row form-control\"\n        @submit.prevent=\"submitRoom\"\n      >\n        <input\n          class=\"input\"\n          type=\"text\"\n          placeholder=\"Enter room\"\n          v-model=\"currentRoom\"\n        />\n        <button\n          class=\"btn ml-10 mr-0\"\n          type=\"submit\"\n        >Connection</button>\n      </form>\n    </div>\n    <div\n      v-if=\"room\"\n      class=\"card\"\n    >\n      <div class=\"messages\">\n        <div\n          v-for=\"user in messages\"\n          :key=\"user.id\"\n          :class=\"{'user-message': user.isUser, 'message': !user.isUser}\"\n        >\n          <span>{{user.name}}</span>: {{user.message}}\n        </div>\n      </div>\n      <form\n        class=\"box-column form-control\"\n        @submit.prevent=\"submitMessage\"\n      >\n        <input\n          class=\"input input-message\"\n          type=\"text\"\n          placeholder=\"Type in text\"\n          v-model=\"inputMessageText\"\n        />\n        <button\n          class=\"btn mt-10\"\n          type=\"submit\"\n        >Submit</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useSocket } from \"../js/composables/useSocket\";\n\nexport default {\n  setup() {\n    // const store = useStore();\n    return { ...useSocket() };\n  },\n};\n</script>","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { io } from 'socket.io-client';\n\nclass SocketioService {\n  socket;\n  constructor() {}\n\n  setupSocketConnection(token, room) {\n    const socketServerEndpoint = process.env.NODE_ENV === 'development' ? process.env.VUE_APP_SOCKET_ENDPOINT : 'https://vue-server.onrender.com';\n    this.socket = io(socketServerEndpoint, {\n      auth: {\n        token,\n        room,\n      },\n    });\n\n    this.socket.on('broadcast', (data) => {\n      console.log(`Message from ${data.name}: `, data.message);\n    });\n    console.log(`Connecting socket...`);\n  }\n\n  subscribeToMessages(cb) {\n    if (!this.socket) return true;\n    this.socket.on('broadcast', (msg) => {\n      console.log('Room event received!');\n      return cb(null, msg);\n    });\n  }\n\n  sendMessage({ message, roomName }, cb) {\n    if (this.socket) {\n      this.socket.emit('message', { message, roomName }, cb);\n    }\n  }\n \n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\n\nexport default new SocketioService();\n","import { useStore } from 'vuex';\nimport { ref, reactive, computed, onUnmounted, onBeforeMount } from 'vue';\nimport socket from '../custom/socket.client';\n\nexport const useSocket = () => {\n  const store = useStore(),\n    currentRoom = ref(''),\n    room = computed(() => store.getters['auth/room']),\n    token = store.getters['auth/token'],\n    user = store.getters['auth/user'],\n    messages = reactive([]),\n    inputMessageText = ref('');\n\n  const submitRoom = () => {\n    if (currentRoom.value) {\n      store.commit('auth/setRoom', currentRoom.value);\n      socket.setupSocketConnection(token, currentRoom.value);\n      socket.subscribeToMessages((err, data) => {\n        messages.push(data);\n      });\n    }\n  };\n\n  const submitMessage = () => {\n    const message = inputMessageText.value;\n    socket.sendMessage({ message, roomName: room.value }, (cb) => {\n      messages.push({\n        ...user,\n        isUser: true,\n        message,\n      });\n      console.log('cb', cb);\n    });\n  };\n\n  onBeforeMount(() => {\n    socket.disconnect();\n  });\n\n  onUnmounted(() => {\n    store.commit('auth/clearRoom');\n  });\n\n  return {\n    room,\n    messages,\n    currentRoom,\n    inputMessageText,\n    submitRoom,\n    submitMessage,\n  };\n};\n","import { render } from \"./Socket.vue?vue&type=template&id=770aa150\"\nimport script from \"./Socket.vue?vue&type=script&lang=js\"\nexport * from \"./Socket.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","_ctx","submitRoom","placeholder","currentRoom","$event","_hoisted_4","room","_hoisted_5","_hoisted_6","_Fragment","_renderList","messages","user","id","_normalizeClass","isUser","_toDisplayString","name","message","submitMessage","inputMessageText","_hoisted_7","_typeof","obj","Symbol","iterator","constructor","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_toPropertyKey","arg","_defineProperty","value","toPropertyKey","enumerable","writable","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pair","decodeURIComponent","TransportError","Error","reason","description","context","super","Transport","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","encodedQuery","alphabet","map","prev","seed","num","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","assign","Request","req","method","xhrStatus","pollXhr","_a","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","SocketioService","setupSocketConnection","token","socketServerEndpoint","console","log","subscribeToMessages","sendMessage","roomName","useSocket","store","useStore","ref","computed","getters","reactive","commit","onBeforeMount","onUnmounted","setup","__exports__","render"],"sourceRoot":""}